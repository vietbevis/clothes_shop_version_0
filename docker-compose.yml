services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest_app
    restart: unless-stopped
    ports:
      - '${PORT:-4446}:4446'
    environment:
      - PORT=${PORT:-4446}
      - API_PREFIX=${API_PREFIX:-api}
      - API_DEFAULT_VERSION=${API_DEFAULT_VERSION:-1}

      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER_NAME=${DB_USER_NAME:-root}
      - DB_PASSWORD=${DB_PASSWORD:-DB_PASSWORD}
      - DB_NAME=${DB_NAME:-DB_NAME}

      - ACCESS_TOKEN_EXPIRES_IN=${ACCESS_TOKEN_EXPIRES_IN:-15m}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN:-1d}
      - VERIFICATION_TOKEN_EXPIRES_IN=${VERIFICATION_TOKEN_EXPIRES_IN:-5m}

      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-REDIS_PASSWORD}

      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_ACCESSKEY=${MINIO_ACCESSKEY:-MINIO_ACCESSKEY}
      - MINIO_SECRETKEY=${MINIO_SECRETKEY:-MINIO_SECRETKEY}
      - BASE_IMAGE_URL=http://minio:9000/images/

      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}

      - KAFKA_BROKER=kafka:9092
    depends_on:
      - mysql
      - redis
      - minio
      - kafka
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: nest_mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME:-DB_NAME}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - '${DB_PORT:-3306}:3306'
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: nest_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-REDIS_PASSWORD}
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: nest_minio
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESSKEY:-MINIO_ACCESSKEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRETKEY:-MINIO_SECRETKEY}
    volumes:
      - minio_data:/data
    ports:
      - '${MINIO_PORT:-9000}:9000'
      - '9001:9001'
    command: server /data --console-address ":9001"
    networks:
      - app-network

  # Setup MinIO với bucket mặc định khi khởi động
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ACCESSKEY:-MINIO_ACCESSKEY} ${MINIO_SECRETKEY:-MINIO_SECRETKEY};
      /usr/bin/mc mb myminio/images;
      /usr/bin/mc policy set public myminio/images;
      exit 0;
      "
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: nest_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: nest_kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  minio_data:
